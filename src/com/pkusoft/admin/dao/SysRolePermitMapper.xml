<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pkusoft.admin.dao.SysRolePermitMapper" >
  <resultMap id="BaseResultMap" type="com.pkusoft.admin.model.SysRolePermit" >
    <id column="ROLE_PERMIT_ID" property="rolePermitId" jdbcType="DECIMAL" />
    <result column="ROLE_ID" property="roleId" jdbcType="DECIMAL" />
    <result column="PERMIT_ID" property="permitId" jdbcType="DECIMAL" />
    <result column="ADD_USER_ID" property="addUserId" jdbcType="DECIMAL" />
    <result column="ADD_USER_NAME" property="addUserName" jdbcType="VARCHAR" />
    <result column="ADD_TIME" property="addTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="pageHeader">
  	<!-- 
    select * from(select s_.*,rownum rn_ from(
    -->
  </sql>
  <sql id="pageRoot">
  	  <!-- 
      ) s_ where rownum &lt;= #{pager.limit}) where rn_ &gt; #{pager.start}
      -->
       limit #{pager.start}, #{pager.pageSize} 
  </sql>
  <sql id="Criteria_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Criteria_Where_Clause" >
    <where >
      <foreach collection="criteria.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
  	ROLE_PERMIT_ID
  	, ROLE_ID
  	, PERMIT_ID
  	, ADD_USER_ID
  	, ADD_USER_NAME
  	, ADD_TIME
  </sql>
  <select id="getListByCriteria" resultMap="BaseResultMap" parameterType="com.pkusoft.framework.model.Criteria" >
  	<if test="pager != null" >
      <include refid="pageHeader" />
    </if> 
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_ROLE_PERMIT
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="pager != null" >
      <include refid="pageRoot" />
    </if>
  </select>
  <select id="get" resultMap="BaseResultMap" parameterType="java.lang.Object" >
    select 
    <include refid="Base_Column_List" />
    from SYS_ROLE_PERMIT
    where 
    ROLE_PERMIT_ID = #{rolePermitId,jdbcType=DECIMAL}
  </select>
  <delete id="delete" parameterType="java.lang.Object" >
    delete from SYS_ROLE_PERMIT
    where 
    ROLE_PERMIT_ID = #{rolePermitId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByCriteria" parameterType="com.pkusoft.framework.model.Criteria" >
    delete from SYS_ROLE_PERMIT
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pkusoft.admin.model.SysRolePermit" >
    insert into SYS_ROLE_PERMIT (
  	ROLE_PERMIT_ID
  	, ROLE_ID
  	, PERMIT_ID
  	, ADD_USER_ID
  	, ADD_USER_NAME
  	, ADD_TIME
      )
    values (
  	#{rolePermitId,jdbcType=DECIMAL}
  	, #{roleId,jdbcType=DECIMAL}
  	, #{permitId,jdbcType=DECIMAL}
  	, #{addUserId,jdbcType=DECIMAL}
  	, #{addUserName,jdbcType=VARCHAR}
  	, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pkusoft.admin.model.SysRolePermit" >
    insert into SYS_ROLE_PERMIT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rolePermitId != null" >
	    ROLE_PERMIT_ID,
      </if>
      <if test="roleId != null" >
	    ROLE_ID,
      </if>
      <if test="permitId != null" >
	    PERMIT_ID,
      </if>
      <if test="addUserId != null" >
	    ADD_USER_ID,
      </if>
      <if test="addUserName != null" >
	    ADD_USER_NAME,
      </if>
      <if test="addTime != null" >
	    ADD_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rolePermitId != null" >
	    #{rolePermitId,jdbcType=DECIMAL},
      </if>
      <if test="roleId != null" >
	    #{roleId,jdbcType=DECIMAL},
      </if>
      <if test="permitId != null" >
	    #{permitId,jdbcType=DECIMAL},
      </if>
      <if test="addUserId != null" >
	    #{addUserId,jdbcType=DECIMAL},
      </if>
      <if test="addUserName != null" >
	    #{addUserName,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
	    #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="getCountByCriteria" parameterType="com.pkusoft.framework.model.Criteria" resultType="java.lang.Integer" >
    select count(*) from SYS_ROLE_PERMIT
    <if test="_parameter != null" >
      <include refid="Criteria_Where_Clause" />
    </if>
  </select>
  <update id="updateByCriteriaSelective" parameterType="map" >
    update SYS_ROLE_PERMIT
    <set >
      <if test="record.rolePermitId != null" >
	    ROLE_PERMIT_ID = #{record.rolePermitId,jdbcType=DECIMAL},
      </if>
      <if test="record.roleId != null" >
	    ROLE_ID = #{record.roleId,jdbcType=DECIMAL},
      </if>
      <if test="record.permitId != null" >
	    PERMIT_ID = #{record.permitId,jdbcType=DECIMAL},
      </if>
      <if test="record.addUserId != null" >
	    ADD_USER_ID = #{record.addUserId,jdbcType=DECIMAL},
      </if>
      <if test="record.addUserName != null" >
	    ADD_USER_NAME = #{record.addUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null" >
	    ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateByCriteria" parameterType="map" >
    update SYS_ROLE_PERMIT
    set 
		ROLE_PERMIT_ID = #{record.rolePermitId,jdbcType=DECIMAL}
		, ROLE_ID = #{record.roleId,jdbcType=DECIMAL}
		, PERMIT_ID = #{record.permitId,jdbcType=DECIMAL}
		, ADD_USER_ID = #{record.addUserId,jdbcType=DECIMAL}
		, ADD_USER_NAME = #{record.addUserName,jdbcType=VARCHAR}
		, ADD_TIME = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Criteria_Where_Clause" />
    </if>
  </update>
  <update id="updateSelective" parameterType="com.pkusoft.admin.model.SysRolePermit" >
    update SYS_ROLE_PERMIT
    <set >
      <if test="rolePermitId != null" >
       ROLE_PERMIT_ID = #{rolePermitId,jdbcType=DECIMAL},
      </if>
      <if test="roleId != null" >
       ROLE_ID = #{roleId,jdbcType=DECIMAL},
      </if>
      <if test="permitId != null" >
       PERMIT_ID = #{permitId,jdbcType=DECIMAL},
      </if>
      <if test="addUserId != null" >
       ADD_USER_ID = #{addUserId,jdbcType=DECIMAL},
      </if>
      <if test="addUserName != null" >
       ADD_USER_NAME = #{addUserName,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
       ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where 
    ROLE_PERMIT_ID = #{rolePermitId,jdbcType=DECIMAL}
  </update>
  <update id="update" parameterType="com.pkusoft.admin.model.SysRolePermit" >
    update SYS_ROLE_PERMIT
    set 
		ROLE_PERMIT_ID = #{rolePermitId,jdbcType=DECIMAL}
		, ROLE_ID = #{roleId,jdbcType=DECIMAL}
		, PERMIT_ID = #{permitId,jdbcType=DECIMAL}
		, ADD_USER_ID = #{addUserId,jdbcType=DECIMAL}
		, ADD_USER_NAME = #{addUserName,jdbcType=VARCHAR}
		, ADD_TIME = #{addTime,jdbcType=TIMESTAMP}
    where 
    ROLE_PERMIT_ID = #{rolePermitId,jdbcType=DECIMAL}
  </update> 
  
    <!-- 根据角色获取数据权限列表 -->
  <select id="getPermitListByRoleId"  resultType="java.util.Map"   parameterType="java.lang.Object">
  	SELECT 
  		t.PERMIT_CODE as permitCode, 
  		(select item_value from sys_dic_item Where dic_name='DIC_PERMIT_TYPE' And item_code=t.Permit_Code) as permitCodeDesc,
  		t.PERMIT_ID as permitId,
  		s.PERMIT_NAME as permitName,
		case IFNULL(m.Role_Permit_Id , 0) when 0 THEN '' else 'checked' end as checked
	FROM Sys_Permit t
	LEFT JOIN Sys_Permit s ON t.Permit_Id = s.Permit_Id
	LEFT JOIN Sys_Role_Permit m ON t.Permit_Id = m.Permit_Id  And m.Role_Id = #{roleId,jdbcType=DECIMAL}
	Order By t.PERMIT_Code, t.Order_Flag
  </select>
</mapper>