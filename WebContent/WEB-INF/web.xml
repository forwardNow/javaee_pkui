<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">

	<display-name>web</display-name>

	<!-- Spring ApplicationContext配置文件的路径,可使用通配符,多个路径用,号分隔 此参数用于后面的Spring Context Loader -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:/applicationContext.xml
		</param-value>
	</context-param>

	<!-- 設定Spring Context的默认Profile:production -->
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>development</param-value>
	</context-param>

	<!--Spring的ApplicationContext 载入 -->
	<listener>
		<listener-class>com.pkusoft.framework.listener.MainContextListener</listener-class>
	</listener>
	
	<!-- 在线用户监听器 -->
	<listener>
		<listener-class>com.pkusoft.framework.listener.OnlineUserListener</listener-class>
	</listener>
	
	<!-- Spring 刷新Introspector防止内存泄露 -->    
	<listener>    
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>    
	</listener> 
	
	<!-- Filter 定义 -->
	
	
    <!-- 实现跨域 -->
    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
        <init-param>
            <param-name>cors.allowOrigin</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedMethods</param-name>
            <param-value>GET, POST, HEAD, PUT, DELETE</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportedHeaders</param-name>
            <param-value>Accept, Origin, X-Requested-With, Content-Type, Last-Modified</param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposedHeaders</param-name>
            <param-value>Set-Cookie</param-value>
        </init-param>
        <init-param>
            <param-name>cors.supportsCredentials</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

    <!-- shiro安全认证 -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- gzjs压缩 -->
	<filter>  
		<filter-name>gzFilter</filter-name>  
		<filter-class>com.pkusoft.framework.filter.GzFilter</filter-class>  
		<!-- <init-param>  
			<param-name>headers</param-name>  
			<param-value>Content-Encoding=gzip</param-value>  
		</init-param> -->  
	</filter>  
	<filter-mapping>  
		<filter-name>gzFilter</filter-name>  
		<url-pattern>*.gzjs</url-pattern>  
	</filter-mapping> 
    

	<!-- Spring MVC Servlet -->
	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	

	<!-- session超时定义,单位为分钟 -->
	<session-config>
		<session-timeout>3</session-timeout>
	</session-config>

	<!-- 出错页面定义 -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/404.jsp</location>
	</error-page> 
	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/views/error/403.jsp</location>
	</error-page>
	<error-page>
		<error-code>401</error-code>
		<location>/WEB-INF/views/error/403.jsp</location>
	</error-page>
	<!-- 已在 spring mvc 中指定
	<welcome-file-list>
		<welcome-file>/login</welcome-file>
	</welcome-file-list>
	 -->
	<!-- 配置标签库及JSP页面编码 -->
	<jsp-config>
		<taglib>
			<taglib-uri>/WEB-INF/tld/pku.tld</taglib-uri>
			<taglib-location>/WEB-INF/tld/pku.tld</taglib-location>
		</taglib>
	</jsp-config>
</web-app>